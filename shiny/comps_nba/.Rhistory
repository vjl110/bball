library(XML)
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
i
tail(base)
i <- 2400
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
off <- base
nrow(off)
# DEFENSE
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
i <- 2600
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
nrow(main)
nrow(base)
def <- base
colnames(def)
head(def)
def <- data.frame("lnup" = base$lineup, "D.poss" = base$Opp, "D.efg" = base$eFG%, "D.tov" = base$TOV/base$Opp, "D.orb" = base$ORB%, "D.drb" = base$DRB%, "D.FTR" = base$FT/base$FGA)
def <- data.frame("lineup" = base$lineup, "D.poss" = base$Opp, "D.efg" = base$eFG%, "D.tov" = base$TOV/base$Opp, "D.orb" = base$ORB%, "D.drb" = base$DRB%, "D.FTR" = base$FT/base$FGA)
head(base$ORB%)
head(base$3PA)
head(base$DRB)
head(base$ORB.)
base$ORB.
def <- data.frame("lineup" = base$lineup, "D.poss" = base$Opp, "D.efg" = base[,16], "D.tov" = base$TOV/base$Opp, "D.orb" = base[,22], "D.drb" = base[,24], "D.FTR" = base$FT/base$FGA)
for(base in c(6, 8:31)){
base[,i] <- as.numeric(as.character(base[,i]))
}
colnames(base)
head(base)
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
for(base in c(6, 8:31)){
base[,i] <- as.numeric(as.character(base[,i]))
}
head(base)
base
i
library(XML)
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
base
head(base)
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
head(base)
nrow(base)
for(base in c(6, 8:31)){
base[,i] <- as.numeric(as.character(base[,i]))
}
nrow(base)
library(XML)
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=orb_pct&c1comp=ge&c1val=&c2stat=efg_pct&c2comp=ge&c2val=&c3stat=tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
off <- base
head(off)
theurl <- "http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=0"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- tables[[which.max(n.rows)]]
i <- 0
while(length(n.rows != 1)){
i <- i + 100
theurl <- paste(c("http://www.basketball-reference.com/play-index/plus/lineup_finder.cgi?request=1&player_id=&match=single&lineup_type=5-man&output=total&year_id=2014&is_playoffs=&team_id=&opp_id=&game_num_min=0&game_num_max=99&game_month=&game_location=&game_result=&c1stat=opp_orb_pct&c1comp=ge&c1val=&c2stat=opp_efg_pct&c2comp=ge&c2val=&c3stat=opp_tov&c3comp=ge&c3val=&c4stat=&c4comp=ge&c4val=&order_by=mp&order_by_asc=&offset=", 0 + i),sep="",collapse="")
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
base <- rbind(base, tables[[which.max(n.rows)]])
}
def <- base
head(def)
def2 <- def[-c(2:5)]
head(def2)
def2 <- def[-c(2:8)]
head(def2)
head(def)
def2 <- def[-c(1, 3:8)]
head(def2)
def2 <- def[-c(1, 3:9)]
head(def2)
tst <- merge(off, def, by = "Lineup")
colnames(off)
colnames(off)[3] <- "Team"
colnames(off)
tst <- merge(off, def, by = "Lineup")
head(tst)
tst <- merge(off, def2, by = "Lineup")
head(tst)
nrow(tst)
nrow(off)
nrow(def)
tst <- merge(off, def2, by = "Lineup", all.xy = T)
nrow(tst)
?merge
tst <- merge(off, def2, by = "Lineup", all.x = FALSE)
nrow(tst)
tail(tst)
hist(tst$MP)
hist(as.numeric(as.character(tst$MP)))
max(as.numeric(as.character(tst$MP)))
max(as.numeric(as.character(tst$MP)), na.rm =T)
subset(tst, as.numeric(as.character(MP)) > 1800 )
subset(tst, as.numeric(as.character(MP)) > 1700 )
subset(tst, as.numeric(as.character(MP)) > 1500 )
setwd("~/GitHub/bball/shiny")
library(shiny)
runApp("comps_nba")
setwd("~/GitHub/bball")
load("data/draftmod/ncaa_indi")
ac <- read.csv("data/draftmod/agecurve.csv")
ac.lws <- loess(ac$Curve.cen ~ ac$Age, span = 1)
#
###  EWP MODEL !!!
ncaa$OBS[ncaa$OBS < 0] <- 0
m1 <-     glm(OBS ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS*MOV + EXP +
tmPTS + X2P + X3P + FT + X2PA + X3PA + I((tmX2PA - X2PA)/((tmX3PA - X3PA) + (tmX2PA - X2PA))) +
AST*TOV +
TRB + tmTRB +
STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF +
Height,
weights = MP, data = ncaa, family = quasipoisson)
ncaa$ewp <- data.frame("EWP" = as.data.frame(predict(m1, newdata = ncaa, type = "response", se.fit = TRUE))$fit)
d <- ncaa
simset <- data.frame('Name' = d$Name, 'Tm' = d$Tm, 'Season' = d$Season, 'EXP' = d$EXP, 'MP' = d$MP, 'X2P' = d$X2P, 'X2PA' = d$X2PA, 'X3P' = d$X3P, 'X3PA' = d$X3PA, 'FT' = d$FT, 'FTA' = d$FTA, 'TRB' = d$TRB, 'AST' = d$AST, 'TOV' = d$TOV, 'STL' = d$STL, 'BLK' = d$BLK, 'PF' = d$PF, 'PTS' = d$PTS, 'Height' = d$Height, 'Weight' = d$Weight, 'Age' = d$Age, 'SOS' = d$SOS, 'MOV' = d$MOV, 'EWP' = d$ewp)
simset <- na.omit(simset)
simset <- subset(simset, MP >= 250 | Season == 2015)
simset$FG <- simset$X2P + simset$X3P
simset$FGA <- simset$X2PA + simset$X3PA
simset$EFG <- (simset$X2P + simset$X3P*1.5)/simset$FGA
simset$TS <- simset$PTS/(2*(simset$FGA + simset$FTA*.475))
simset$FTper <- simset$FT/simset$FTA
simset$X3per <- ifelse(simset$X3PA > 0.5, simset$X3P/simset$X3PA, 0)
simset$X2per <- simset$X2P/simset$X2PA
simset$FTR <- simset$FTA/simset$FGA
simset$X3bias <- simset$X3P*3/simset$PTS
#simset$ATO <- simset$AST/simset$TOV
for(j in 6:ncol(simset)){
simset[,j] <- scale(simset[,j])
}
write.csv(simset, "simset.csv", row.names=FALSE)
###___________
bas <- read.csv("data/draftmod/BBRtot.csv", strip.white = T)
new <- read.csv("data/draftmod/BBRtot2015.csv", strip.white = T)
bas <- rbind(bas, new)
bas <- subset(bas, Tm != "TOT")
bas <- bas[-c(3:7)]
bas <- aggregate( . ~ Name + Season + Age, data = bas, sum)
adv <- read.csv("data/draftmod/BBRadv.csv", strip.white = T)
new <- read.csv("data/draftmod/BBRadv2015.csv", strip.white = T)
adv <- rbind(adv, new)
adv <- subset(adv, Tm != "TOT")
adv <- adv[c(1:2, 8, 24)]
adv <- aggregate( . ~ Name + Season, data = adv, sum)
adv$WS.48 <- (adv$WS/adv$MP)*48
adv <- adv[-c(3:4)]
nba <- merge(bas, adv, by = c("Name", "Season"), all.x = T)
rapm <- read.csv("data/draftmod/rapm.csv", strip.white = T)
rapm <- rapm[c(1:2, 5)]
nba <- merge(nba, rapm, by = c("Name", "Season"), all.x = T)
nba <- subset(nba, MP >= 250 | (Season == 2015 & MP > 100))
bio <- read.csv("data/draftmod/BBRbio.csv")
nba <- merge(nba, bio, by = "Name", all.x = T)
nba$Age <- (nba$Season-1900) - nba$DOB/365
# create averaged WS+RAPM measure
#first need to scale them... then average them
mn.ws <- mean(nba$WS.48, na.rm=T)
sd.ws <- sd(nba$WS.48, na.rm=T)
mn.rpm <- mean(nba$DIF, na.rm=T)
sd.rpm <- sd(nba$DIF, na.rm=T)
for(i in 1:nrow(nba)){
nba$WS.48[i] <- (nba$WS.48[i] - mn.ws)/sd.ws
nba$DIF[i] <- (nba$DIF[i] - mn.rpm)/sd.rpm
nba$cmb[i] <- ifelse(!is.na(nba$DIF[i]), (nba$DIF[i]+nba$WS.48[i])/2, nba$WS.48[i])
}
nba$X3P[is.na(nba$X3P)] <- 0
nba$X3PA[is.na(nba$X3PA)] <- 0
nba <- nba[-c(20:22, 25:32)]
nba <- na.omit(nba)
for(i in c(5:19)){
nba[,i] <- (nba[,i]/nba$MP)*36
}
nba$FG <- nba$X2P + nba$X3P
nba$FGA <- nba$X2PA + nba$X3PA
nba$EFG <- (nba$X2P + nba$X3P*1.5)/nba$FGA
nba$TS <- nba$PTS/(2*(nba$FGA + nba$FTA*.475))
nba$FTper <- nba$FT/nba$FTA
nba$X3per <- ifelse(nba$X3PA > 0.5, nba$X3P/nba$X3PA, 0)
nba$X2per <- nba$X2P/nba$X2PA
nba$FTR <- nba$FTA/nba$FGA
nba$X3bias <- nba$X3P*3/nba$PTS
nba$ATO <- nba$AST/nba$TOV
for(j in c(3, 5:ncol(nba))){
nba[,j] <- scale(nba[,j])
}
write.csv(nba, "simset.nba.csv", row.names=FALSE)
setwd("~/GitHub/bball/shiny")
runApp("comps")
runApp("comps_nba")
