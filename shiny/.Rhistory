####	Prep random forest data
hum.ncaa <- merge(ncaa.ewp, ncaa, by = c("Name", "Season", "MP", "OBS"), all.x = T)
hum.ncaa <- merge(hum.ncaa, drft, by = "Name", all.x = T)
hum.ncaa$Pick <- predict(lws.pick, newdata=hum.ncaa$Pick)
hum.ncaa <- subset(hum.ncaa, DRFT >= 1990)
hum.ncaa$Pick[is.na(hum.ncaa$Pick)] <- min(hum.ncaa$Pick, na.rm=T)
hum.euro <- merge(euro.ewp, euro, by = c("Name", "Season", "MP", "OBS"), all.x = T)
hum.euro <- merge(hum.euro, drft, by = "Name", all.x = T)
hum.euro$Pick <- predict(lws.pick, newdata=hum.euro$Pick)
hum.euro <- subset(hum.euro, DRFT >= 1990)
hum.euro$Pick[is.na(hum.euro$Pick)] <- min(hum.euro$Pick, na.rm=T)
hum.euro$Tm <- hum.euro$Team
#####
library(randomForest)
case.ncaa <- data.frame("Name" = hum.ncaa$Name, "League" = "NCAA", "Tm" = hum.ncaa$Tm, "Season" = hum.ncaa$Season)
case.euro <- data.frame("Name" = hum.euro$Name, "League" = hum.euro$League, "Tm" = hum.euro$Team, "Season" = hum.euro$Season)
for(i in 1990:2015){
m1 <- randomForest(OBS ~
Pick + Age + EXP + EWP + SOS + MOV +
X2P + X3P + FT + X2PA + X3PA + FTA + asd + atRIM +
AST + TOV +
TRB +
STL + BLK + PF +
Height + NS_vert + Sprint,
data = subset(hum.ncaa, Season != i), weights = MP, importance=TRUE, na.action=na.omit)
case.ncaa$PRD[hum.ncaa$Season == i] <- predict(m1, subset(hum.ncaa, Season == i))
}
ncaa.hum <- data.frame("Name" = case.ncaa$Name, "League" = case.ncaa$League, "Team" = case.ncaa$Tm, "Season" = case.ncaa$Season, "HUM" = round(case.ncaa$PRD, 1))
ncaa.hum <- subset(ncaa.hum, !is.na(HUM))
subset(ncaa, Name == "Anthony Davis")
subset(ncaa.hum, Name == "Anthony Davis")
#
for(i in 1990:2015){
m1 <- randomForest(OBS ~
Pick + Age + EWP +
X2P + X3P + FT + X2PA + X3PA + FTA + asd + atRIM +
AST + TOV +
DRB + ORB +
STL + BLK + PF +
Height + NS_vert + CBA,
data = subset(hum.euro, Season != i), weights = ifelse(Age <= 22, MP*5, MP), importance=TRUE, na.action=na.omit)
case.euro$PRD[hum.euro$Season == i] <- predict(m1, subset(hum.euro, Season == i))
}
euro.hum <- data.frame("Name" = case.euro$Name, "League" = case.euro$League, "Team" = case.euro$Tm, "Season" = case.euro$Season, "HUM" = round(case.euro$PRD, 1))
euro.hum <- subset(euro.hum, !is.na(HUM))
#	for(i in 1:nrow(euro.hum)){
#		compset <- c(euro.hum$HUM[i], euro.hum$HUM[euro.hum$Name != euro.hum$Name[i]])
#			obs <- na.omit(euro.ewp$OBS)
#		euro.hum$adj[i] <- round(quantile(obs, (rank(compset, na.last = "keep")/max(rank(compset, na.last = "keep"), na.rm=T))[1]), 1)
#	}
#euro.hum$HUM <- euro.hum$adj
#euro.hum <- euro.hum[-ncol(euro.hum)]
### Combine all finished sections
hum <- rbind(ncaa.hum, euro.hum)
data <- merge(ewp, hum, by = c("Name", "League", "Team", "Season"), all.x = T)
data <- data[order(data$Season, decreasing = T), ]
#######
#########  STAR MOD!!!
subset(ncaa.hum, Name == "Anthony Davis")
subset(data, Name == "Anthony Davis")
subset(ncaa, Name == "Anthony Davis")
star.ncaa <- ncaa
star.ncaa$PRB <- NA
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
star.euro <- merge(euro, data, by = c("Name", "Season", "OBS"), all.x = T)
star.euro$PRB <- NA
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)
library(nnet)
head(star.ncaa)
head(star.euro)
star.ncaa <- ncaa
colnames(star.ncaa)[4] <- "League"
star.ncaa$PRB <- NA
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
star.euro <- merge(euro, data, by = c("Name", "Season", "OBS"), all.x = T)
star.euro$PRB <- NA
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)
library(nnet)
prb.ncaa <- multinom(PRB ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS + MOV +
X2P + X3P + FT + X2PA*atRIM + X3PA +
I((tmX2PA - X2PA)/((tmX3PA - X3PA))) +
AST*TOV + asd +
TRB + STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF + Height + NS_vert,
data=star.ncaa, weights = MP)
prb.euro <- multinom(PRB ~
I(predict(ac.lws, newdata = Age)) +
MPG + EWP + HUM,
data=star.euro, weights =  ifelse(Age <= 22, MP.x*5, MP.x))
head(data)
colnames(star.euro)
PRB.ncaa <- data.frame("PRB" = round(predict(prb.ncaa, newdata=star.ncaa, "probs"), digits=3))
colnames(PRB.ncaa) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.ncaa <- cbind(star.ncaa, PRB.ncaa)
star.ncaa <- merge(data, star.ncaa[c(1:2, 4, 53:57)], by = c("Name", "Season"))
head(star.ncaa)
star.ncaa <- ncaa
colnames(star.ncaa)[4] <- "League"
star.ncaa$PRB <- NA
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
star.euro <- merge(euro, data, by = c("Name", "Season", "OBS"), all.x = T)
star.euro$PRB <- NA
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)
library(nnet)
prb.ncaa <- multinom(PRB ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS + MOV +
X2P + X3P + FT + X2PA*atRIM + X3PA +
I((tmX2PA - X2PA)/((tmX3PA - X3PA))) +
AST*TOV + asd +
TRB + STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF + Height + NS_vert,
data=star.ncaa, weights = MP)
prb.euro <- multinom(PRB ~
I(predict(ac.lws, newdata = Age)) +
MPG + EWP + HUM,
data=star.euro, weights =  ifelse(Age <= 22, MP.x*5, MP.x))
PRB.ncaa <- data.frame("PRB" = round(predict(prb.ncaa, newdata=star.ncaa, "probs"), digits=3))
colnames(PRB.ncaa) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.ncaa <- cbind(star.ncaa, PRB.ncaa)
star.ncaa <- merge(data, star.ncaa[c(1:2, 4, 53:57)], by = c("Name", "Season", "League"))
PRB.euro <- data.frame("PRB" = round(predict(prb.euro, newdata=star.euro, "probs"), digits=3))
colnames(PRB.euro) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.euro <- cbind(star.euro, PRB.euro)
star.euro <- merge(data, star.euro[c(1:2, 49, 55:59)], by = c("Name", "Season", "League"))
head(star.euro)
data <- rbind(star.ncaa, star.euro)
draft <- read.csv("data/draftmod/Drafts.csv")
draft <- subset(draft, DRFT >= 1990)
draft$Name <- as.character(draft$Name)
#    percent <- function(x, digits = 0, format = "f", ...) {
#		 paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
#	}
for(i in 1:nrow(draft)){
ego <- subset(data, Name == draft$Name[i] & Season <= draft$DRFT[i])
draft$League[i] <- as.character(ego$League[1])
draft$Team[i] <- as.character(ego$Team[1])
draft$MP[i] <- round(sum(ego$MP, na.rm = T), 0)
draft$EWP[i] <- round(weighted.mean(ego$EWP, ego$MP, na.rm = T), 1)
draft$HUM[i] <- round(weighted.mean(ego$HUM, ego$MP, na.rm = T), 1)
draft$BUST[i] <- round(weighted.mean(ego$BUST, ego$MP, na.rm = T), 2)
draft$BNCH[i] <- round(weighted.mean(ego$BNCH, ego$MP, na.rm = T), 2)
draft$STRT[i] <- round(weighted.mean(ego$STRT, ego$MP, na.rm = T), 2)
draft$STUD[i] <- round(weighted.mean(ego$STUD, ego$MP, na.rm = T), 2)
draft$STAR[i] <- round(weighted.mean(ego$STAR, ego$MP, na.rm = T), 2)
}
colnames(draft)[3] <- "Season"
#add seniors!!!
snrs <- subset(ncaa, Season == 2015 & EXP > 3)[1:2]
for(i in 1:nrow(snrs)){
ego <- subset(data, Name == snrs$Name[i] & Season <= snrs$Season[i])
snrs$League[i] <- as.character(ego$League[1])
snrs$Team[i] <- as.character(ego$Team[1])
snrs$MP[i] <- round(sum(ego$MP, na.rm = T), 0)
snrs$EWP[i] <- round(weighted.mean(ego$EWP, ego$MP, na.rm = T), 1)
snrs$HUM[i] <- round(weighted.mean(ego$HUM, ego$MP, na.rm = T), 1)
snrs$BUST[i] <- round(weighted.mean(ego$BUST, ego$MP, na.rm = T), 2)
snrs$BNCH[i] <- round(weighted.mean(ego$BNCH, ego$MP, na.rm = T), 2)
snrs$STRT[i] <- round(weighted.mean(ego$STRT, ego$MP, na.rm = T), 2)
snrs$STUD[i] <- round(weighted.mean(ego$STUD, ego$MP, na.rm = T), 2)
snrs$STAR[i] <- round(weighted.mean(ego$STAR, ego$MP, na.rm = T), 2)
}
snrs <- data.frame("Pick" = "", snrs)
draft <- rbind(draft, snrs)
draft <- subset(draft, !duplicated(Name))
draft[draft == "NaN"] <- NA
#		draft$BUST[!is.na(draft$BUST)] <- percent(draft$BUST[!is.na(draft$BUST)])
#		draft$BNCH[!is.na(draft$BNCH)] <- percent(draft$BNCH[!is.na(draft$BNCH)])
#		draft$STRT[!is.na(draft$STRT)] <- percent(draft$STRT[!is.na(draft$STRT)])
#		draft$STUD[!is.na(draft$STUD)] <- percent(draft$STUD[!is.na(draft$STUD)])
#		draft$STAR[!is.na(draft$STAR)] <- percent(draft$STAR[!is.na(draft$STAR)])
draft <- data.frame(draft[1:8], "AVG" = round(ifelse(!is.na(draft$HUM), (draft$HUM + draft$EWP)/2, draft$EWP), 1), draft[9:13])
draft <- merge(draft, POS, by = "Name", all.x = T)
draft <- draft[order(draft$AVG, decreasing = T),]
draft <- draft[order(draft$Season, decreasing = T),]
#########
### OUTPUT ####
#########
data$MP <- round(data$MP, 0)
data$OBS <- round(data$OBS, 1)
#	data$BUST[!is.na(data$BUST)] <- percent(round(as.numeric(data$BUST[!is.na(data$BUST)]), 2))
#	data$BNCH[!is.na(data$BNCH)] <- percent(round(as.numeric(data$BNCH[!is.na(data$BNCH)]), 2))
#	data$STRT[!is.na(data$STRT)] <- percent(round(as.numeric(data$STRT[!is.na(data$STRT)]), 2))
#	data$STUD[!is.na(data$STUD)] <- percent(round(as.numeric(data$STUD[!is.na(data$STUD)]), 2))
#	data$STAR[!is.na(data$STAR)] <- percent(round(as.numeric(data$STAR[!is.na(data$STAR)]), 2))
#data <- merge(data, POS, by = "Name", all.x = T)
write.csv(data, "data/draftmod/OUTPUT.FULL.csv", row.names = FALSE)
write.csv(draft, "data/draftmod/OUTPUT.DRAFT.csv", row.names = FALSE)
subset(data, Name == "Anthony Davis")
data <- merge(ewp, hum, by = c("Name", "League", "Team", "Season"), all.x = T)
data <- data[order(data$Season, decreasing = T), ]
#######
#########  STAR MOD!!!
######
star.ncaa <- ncaa
colnames(star.ncaa)[4] <- "League"
star.ncaa$PRB <- NA
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
star.euro <- merge(euro, data, by = c("Name", "Season", "OBS"), all.x = T)
star.euro$PRB <- NA
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)
library(nnet)
prb.ncaa <- multinom(PRB ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS + MOV +
X2P + X3P + FT + X2PA*atRIM + X3PA +
I((tmX2PA - X2PA)/((tmX3PA - X3PA))) +
AST*TOV + asd +
TRB + STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF + Height + NS_vert,
data=star.ncaa, weights = MP)
prb.euro <- multinom(PRB ~
I(predict(ac.lws, newdata = Age)) +
MPG + EWP + HUM,
data=star.euro, weights =  ifelse(Age <= 22, MP.x*5, MP.x))
PRB.ncaa <- data.frame("PRB" = round(predict(prb.ncaa, newdata=star.ncaa, "probs"), digits=3))
colnames(PRB.ncaa) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.ncaa <- cbind(star.ncaa, PRB.ncaa)
star.ncaa <- merge(data, star.ncaa[c(1:2, 4, 53:57)], by = c("Name", "Season", "League"))
PRB.euro <- data.frame("PRB" = round(predict(prb.euro, newdata=star.euro, "probs"), digits=3))
colnames(PRB.euro) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.euro <- cbind(star.euro, PRB.euro)
star.euro <- merge(data, star.euro[c(1:2, 49, 55:59)], by = c("Name", "Season", "League"))
data <- rbind(star.ncaa, star.euro)
#	data <- rbind(star.ncaa[c(1:8, (ncol(star.ncaa)-4):ncol(star.ncaa))], star.euro[c(1:8, (ncol(star.euro)-4):ncol(star.euro))])
#	data <- merge(data, star[c(1:8, 38:42)], by = c("Name", "Season", "League", "Team", "MP", "OBS", "EWP", "HUM"), all.x = T)
subset(data, Name == "Anthony Davis")
subset(star.ncaa, Name == "Anthony Davis")
subset(star.euro, Name == "Anthony Davis")
subset(euro, Name == "Anthony Davis")
subset(euro.hum, Name == "Anthony Davis")
subset(euro.hum, Name == "Mario Hezonja")
subset(euro.hum, Name == "Moussa Diagne")
subset(data, Name == "Moussa Diagne")
data <- merge(ewp, hum, by = c("Name", "League", "Team", "Season"), all.x = T)
data <- data[order(data$Season, decreasing = T), ]
#######
#########  STAR MOD!!!
######
star.ncaa <- ncaa
colnames(star.ncaa)[4] <- "League"
star.ncaa$PRB <- NA
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
star.euro <- merge(euro.hum, data, by = c("Name", "Season", "League", "Team", "HUM"), all.x = T)
star.euro$PRB <- NA
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)
subset(star.euro, Name == "Anthony Davis")
library(nnet)
prb.ncaa <- multinom(PRB ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS + MOV +
X2P + X3P + FT + X2PA*atRIM + X3PA +
I((tmX2PA - X2PA)/((tmX3PA - X3PA))) +
AST*TOV + asd +
TRB + STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF + Height + NS_vert,
data=star.ncaa, weights = MP)
prb.euro <- multinom(PRB ~
EWP + HUM,
data=star.euro, weights =  MP)
PRB.ncaa <- data.frame("PRB" = round(predict(prb.ncaa, newdata=star.ncaa, "probs"), digits=3))
colnames(PRB.ncaa) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.ncaa <- cbind(star.ncaa, PRB.ncaa)
star.ncaa <- merge(data, star.ncaa[c(1:2, 4, 53:57)], by = c("Name", "Season", "League"))
head(star.ncaa)
PRB.euro <- data.frame("PRB" = round(predict(prb.euro, newdata=star.euro, "probs"), digits=3))
colnames(PRB.euro) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
star.euro <- cbind(star.euro, PRB.euro)
head(star.euro)
star.euro <- star.euro[c(1:4, 6:8, 5, 10:14)]
head(star.euro)
star.euro$MP <- round(star.euro$MP, 0)
data <- rbind(star.ncaa, star.euro)
subset(data, Name == "Anthony Davis")
subset(data, Name == "Mario Hezonja")
subset(data, Name == "Kristaps Porzingis")
subset(data, Name == "Emmanuel Mudiay")
### plug retrodictions into drafted list
draft <- read.csv("data/draftmod/Drafts.csv")
draft <- subset(draft, DRFT >= 1990)
draft$Name <- as.character(draft$Name)
#    percent <- function(x, digits = 0, format = "f", ...) {
#		 paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
#	}
for(i in 1:nrow(draft)){
ego <- subset(data, Name == draft$Name[i] & Season <= draft$DRFT[i])
draft$League[i] <- as.character(ego$League[1])
draft$Team[i] <- as.character(ego$Team[1])
draft$MP[i] <- round(sum(ego$MP, na.rm = T), 0)
draft$EWP[i] <- round(weighted.mean(ego$EWP, ego$MP, na.rm = T), 1)
draft$HUM[i] <- round(weighted.mean(ego$HUM, ego$MP, na.rm = T), 1)
draft$BUST[i] <- round(weighted.mean(ego$BUST, ego$MP, na.rm = T), 2)
draft$BNCH[i] <- round(weighted.mean(ego$BNCH, ego$MP, na.rm = T), 2)
draft$STRT[i] <- round(weighted.mean(ego$STRT, ego$MP, na.rm = T), 2)
draft$STUD[i] <- round(weighted.mean(ego$STUD, ego$MP, na.rm = T), 2)
draft$STAR[i] <- round(weighted.mean(ego$STAR, ego$MP, na.rm = T), 2)
}
colnames(draft)[3] <- "Season"
#add seniors!!!
snrs <- subset(ncaa, Season == 2015 & EXP > 3)[1:2]
for(i in 1:nrow(snrs)){
ego <- subset(data, Name == snrs$Name[i] & Season <= snrs$Season[i])
snrs$League[i] <- as.character(ego$League[1])
snrs$Team[i] <- as.character(ego$Team[1])
snrs$MP[i] <- round(sum(ego$MP, na.rm = T), 0)
snrs$EWP[i] <- round(weighted.mean(ego$EWP, ego$MP, na.rm = T), 1)
snrs$HUM[i] <- round(weighted.mean(ego$HUM, ego$MP, na.rm = T), 1)
snrs$BUST[i] <- round(weighted.mean(ego$BUST, ego$MP, na.rm = T), 2)
snrs$BNCH[i] <- round(weighted.mean(ego$BNCH, ego$MP, na.rm = T), 2)
snrs$STRT[i] <- round(weighted.mean(ego$STRT, ego$MP, na.rm = T), 2)
snrs$STUD[i] <- round(weighted.mean(ego$STUD, ego$MP, na.rm = T), 2)
snrs$STAR[i] <- round(weighted.mean(ego$STAR, ego$MP, na.rm = T), 2)
}
snrs <- data.frame("Pick" = "", snrs)
draft <- rbind(draft, snrs)
draft <- subset(draft, !duplicated(Name))
draft[draft == "NaN"] <- NA
#		draft$BUST[!is.na(draft$BUST)] <- percent(draft$BUST[!is.na(draft$BUST)])
#		draft$BNCH[!is.na(draft$BNCH)] <- percent(draft$BNCH[!is.na(draft$BNCH)])
#		draft$STRT[!is.na(draft$STRT)] <- percent(draft$STRT[!is.na(draft$STRT)])
#		draft$STUD[!is.na(draft$STUD)] <- percent(draft$STUD[!is.na(draft$STUD)])
#		draft$STAR[!is.na(draft$STAR)] <- percent(draft$STAR[!is.na(draft$STAR)])
draft <- data.frame(draft[1:8], "AVG" = round(ifelse(!is.na(draft$HUM), (draft$HUM + draft$EWP)/2, draft$EWP), 1), draft[9:13])
draft <- merge(draft, POS, by = "Name", all.x = T)
draft <- draft[order(draft$AVG, decreasing = T),]
draft <- draft[order(draft$Season, decreasing = T),]
#########
### OUTPUT ####
#########
data$MP <- round(data$MP, 0)
data$OBS <- round(data$OBS, 1)
#	data$BUST[!is.na(data$BUST)] <- percent(round(as.numeric(data$BUST[!is.na(data$BUST)]), 2))
#	data$BNCH[!is.na(data$BNCH)] <- percent(round(as.numeric(data$BNCH[!is.na(data$BNCH)]), 2))
#	data$STRT[!is.na(data$STRT)] <- percent(round(as.numeric(data$STRT[!is.na(data$STRT)]), 2))
#	data$STUD[!is.na(data$STUD)] <- percent(round(as.numeric(data$STUD[!is.na(data$STUD)]), 2))
#	data$STAR[!is.na(data$STAR)] <- percent(round(as.numeric(data$STAR[!is.na(data$STAR)]), 2))
#data <- merge(data, POS, by = "Name", all.x = T)
write.csv(data, "data/draftmod/OUTPUT.FULL.csv", row.names = FALSE)
write.csv(draft, "data/draftmod/OUTPUT.DRAFT.csv", row.names = FALSE)
setwd("~/GitHub/bball")
load("data/draftmod/ncaa_indi")
load("data/draftmod/euro")
load("data/draftmod/eu.inf")
outputz <- read.csv("data/draftmod/OUTPUT.FULL.csv")
ac <- read.csv("data/draftmod/agecurve.csv")
ac.lws <- loess(ac$Curve.cen ~ ac$Age, span = 1)
#
###  EWP MODEL !!!
ncaa$OBS[ncaa$OBS < 0] <- 0
m1 <-     glm(OBS ~
I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS*MOV + EXP +
tmPTS + X2P + X3P + FT + X2PA + X3PA + I((tmX2PA - X2PA)/((tmX3PA - X3PA) + (tmX2PA - X2PA))) +
AST*TOV +
TRB + tmTRB +
STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
tmPF +
Height,
weights = MP, data = ncaa, family = quasipoisson)
ncaa$ewp <- data.frame("EWP" = as.data.frame(predict(m1, newdata = ncaa, type = "response", se.fit = TRUE))$fit)
ATH <- read.csv("data/draftmod/ATH.csv")
SHOTLOC <- read.csv("data/draftmod/SHOTLOC.csv")[-4]
ncaa <- ncaa[-c(36, 40, 42:43, 46:53)]
ncaa <- merge(ncaa, SHOTLOC, by = c("Name", "Season", "Tm"), all.x =T)
ncaa <- merge(ncaa, ATH, by = c("Name"), all.x =T)
d <- ncaa
simset <- data.frame('Name' = d$Name, 'Tm' = d$Tm, 'Season' = d$Season, 'EXP' = d$EXP, 'MP' = d$MP, 'X2P' = d$X2P, 'X2PA' = d$X2PA, 'X3P' = d$X3P, 'X3PA' = d$X3PA, 'FT' = d$FT, 'FTA' = d$FTA, 'TRB' = d$TRB, 'AST' = d$AST, 'TOV' = d$TOV, 'STL' = d$STL, 'BLK' = d$BLK, 'PF' = d$PF, 'PTS' = d$PTS, "ASD" = d$asd, "atRIM" = d$atRIM, 'Height' = d$Height, 'Weight' = d$Weight, 'Wingspan' = d$Wingspan, 'Reach' = d$Reach, "Vertical" = scale(d$NS_vert) + scale(d$max_vert), "Sprint" = d$Sprint, "Agility"=d$Agility,  'Age' = d$Age, 'SOS' = d$SOS, 'MOV' = d$MOV, 'EWP' = d$ewp)
simset <- na.omit(simset)
simset <- subset(simset, MP >= 250 | Season == 2015)
simset$FG <- simset$X2P + simset$X3P
simset$FGA <- simset$X2PA + simset$X3PA
simset$EFG <- (simset$X2P + simset$X3P*1.5)/simset$FGA
simset$TS <- simset$PTS/(2*(simset$FGA + simset$FTA*.475))
simset$FTper <- simset$FT/simset$FTA
simset$X3per <- ifelse(simset$X3PA > 0.5, simset$X3P/simset$X3PA, 0)
simset$X2per <- simset$X2P/simset$X2PA
simset$FTR <- simset$FTA/simset$FGA
simset$X3bias <- simset$X3P*3/simset$PTS
#simset$ATO <- simset$AST/simset$TOV
for(j in 6:ncol(simset)){
simset[,j] <- scale(simset[,j])
}
simset <- simset[order(simset$Season, decreasing = T), ]
write.csv(simset, "shiny/comps/data/simset.csv", row.names=FALSE)
################################## INTERNATIONAL
#
###  EWP MODEL !!!
euro$OBS[euro$OBS < 0] <- 0
m1 <-     glm(OBS ~
I(predict(ac.lws, newdata= Age)) +
PTS_tm + X2P + X3P + FT + X2PA + X3PA + I((X2PA_tm - X2PA)/((X3PA_tm - X3PA) + (X2PA_tm - X2PA))) +
AST*TOV +
DRB + I((ORB_tm + DRB_tm) - (ORB + DRB)) +
STL + BLK + I(STL_tm - STL) +
PF + I(PF_tm - PF) +
Height,
weights = ifelse(Age <= 22, MP*5, MP), data = euro, family = quasipoisson)
euro$ewp <- data.frame("EWP" = as.data.frame(predict(m1, newdata = euro, type = "response", se.fit = TRUE))$fit)
d <- euro
simset <- data.frame('Name' = d$Name, 'Season' = d$Season, 'MP' = d$MP, 'X2P' = d$X2P, 'X2PA' = d$X2PA, 'X3P' = d$X3P, 'X3PA' = d$X3PA, 'FT' = d$FT, 'FTA' = d$FTA, 'DRB' = d$DRB, 'ORB' = d$ORB, 'AST' = d$AST, 'TOV' = d$TOV, 'STL' = d$STL, 'BLK' = d$BLK, 'PF' = d$PF, 'PTS' = d$PTS, 'Height' = d$Height, 'Weight' = d$Weight, 'Age' = d$Age, 'EWP' = d$ewp)
simset <- na.omit(simset)
simset <- merge(simset, outputz[c(1:2, 4)], by = c("Name", "Season"), all.x =T)
simset <- simset[c(1, ncol(simset), 2:(ncol(simset) - 1))]
colnames(simset)[2] <- "Tm"
simset <- subset(simset, MP >= 250 | Season == 2015)
simset$FG <- simset$X2P + simset$X3P
simset$FGA <- simset$X2PA + simset$X3PA
simset$EFG <- (simset$X2P + simset$X3P*1.5)/simset$FGA
simset$TS <- simset$PTS/(2*(simset$FGA + simset$FTA*.475))
simset$FTper <- simset$FT/simset$FTA
simset$X3per <- ifelse(simset$X3PA > 0.5, simset$X3P/simset$X3PA, 0)
simset$X2per <- simset$X2P/simset$X2PA
simset$FTR <- simset$FTA/simset$FGA
simset$X3bias <- simset$X3P*3/simset$PTS
#simset$ATO <- simset$AST/simset$TOV
for(j in 5:ncol(simset)){
simset[,j] <- scale(simset[,j])
}
simset <- simset[order(simset$Season, decreasing = T), ]
write.csv(simset, "shiny/comps_intl/data/simset.csv", row.names=FALSE)
###___________
bas <- read.csv("data/draftmod/BBRtot.csv", strip.white = T)
bas <- subset(bas, Tm != "TOT")
new <- read.csv("data/draftmod/BBRtot2015.csv", strip.white = T)
bas <- rbind(bas, new)
bas <- bas[-c(3:5, 7)]
bas <- aggregate( . ~ Name + Season + Age, data = bas, sum)
bas$MPG <- bas$MP/bas$G
adv <- read.csv("data/draftmod/BBRadv.csv", strip.white = T)
adv <- subset(adv, Tm != "TOT")
new <- read.csv("data/draftmod/BBRadv2015.csv", strip.white = T)
adv <- rbind(adv, new)
adv <- adv[c(1:2, 8, 24)]
adv <- aggregate( . ~ Name + Season, data = adv, sum)
adv$WS.48 <- (adv$WS/adv$MP)*48
adv <- adv[-c(3:4)]
nba <- merge(bas, adv, by = c("Name", "Season"), all.x = T)
rapm <- read.csv("data/draftmod/rapm.csv", strip.white = T)
rapm <- rapm[c(1:2, 5)]
nba <- merge(nba, rapm, by = c("Name", "Season"), all.x = T)
nba <- subset(nba, MP >= 250 | (Season == 2015 & MP > 100))
bio <- read.csv("data/draftmod/BBRbio.csv")
nba <- merge(nba, bio, by = "Name", all.x = T)
nba$Age <- (nba$Season-1900) - nba$DOB/365
# create averaged WS+RAPM measure
#first need to scale them... then average them
mn.ws <- mean(nba$WS.48, na.rm=T)
sd.ws <- sd(nba$WS.48, na.rm=T)
mn.rpm <- mean(nba$DIF, na.rm=T)
sd.rpm <- sd(nba$DIF, na.rm=T)
for(i in 1:nrow(nba)){
nba$WS.48[i] <- (nba$WS.48[i] - mn.ws)/sd.ws
nba$DIF[i] <- (nba$DIF[i] - mn.rpm)/sd.rpm
nba$cmb[i] <- ifelse(!is.na(nba$DIF[i]), (nba$DIF[i]+nba$WS.48[i])/2, nba$WS.48[i])
}
nba$X3P[is.na(nba$X3P)] <- 0
nba$X3PA[is.na(nba$X3PA)] <- 0
nba <- nba[-c(22:24, 27:34)]
nba <- na.omit(nba)
nba <- nba[-4]
for(i in c(5:19)){
nba[,i] <- (nba[,i]/nba$MP)*36
}
nba$FG <- nba$X2P + nba$X3P
nba$FGA <- nba$X2PA + nba$X3PA
nba$EFG <- (nba$X2P + nba$X3P*1.5)/nba$FGA
nba$TS <- nba$PTS/(2*(nba$FGA + nba$FTA*.475))
nba$FTper <- nba$FT/nba$FTA
nba$X3per <- ifelse(nba$X3PA > 0.5, nba$X3P/nba$X3PA, 0)
nba$X2per <- nba$X2P/nba$X2PA
nba$FTR <- nba$FTA/nba$FGA
nba$X3bias <- nba$X3P*3/nba$PTS
nba$ATO <- nba$AST/nba$TOV
nba <- subset(nba, ATO != "Inf")
scale.lng <- ncol(nba)
nba <- data.frame(nba, "age" = nba$Age, "mpg" = nba$MPG, "pts" = nba$PTS, "efg" = (nba$X2P + nba$X3P*1.5)/(nba$X2PA + nba$X3PA), "x3pa" = nba$X3PA, "ftr" = nba$FTA/(nba$X2PA + nba$X3PA), "trb" = nba$TRB, "ast" = nba$AST, "tov" =  nba$TOV, "blk" = nba$BLK, "stl" = nba$STL, "pf" = nba$PF, "hgt" = nba$Height, "wgt" = nba$Weight)
for(j in c(3, 5:scale.lng)){
nba[,j] <- scale(nba[,j])
}
nba <- nba[order(nba$Season, decreasing = T), ]
write.csv(nba, "shiny/comps_nba/data/simset.nba.csv", row.names=FALSE)
setwd("~/GitHub/bball/shiny")
<<<<<<< HEAD
=======
library(shiny)
runApp("preds")
>>>>>>> scraping finished working on rapm
runApp("preds")
runApp("comps")
runApp("preds")
