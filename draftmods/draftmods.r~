rm(list=ls())
setwd("C:/Users/Layne/Dropbox/bball")


##
###### EWP MODELS
##i
load("data/ncaa_indi")
load("data/euro")
load("data/eu.inf")

ac <- read.csv("data/agecurve.csv")
ac.lws <- loess(ac$Curve.cen ~ ac$Age, span = 1)

#
### NCAA
ATH <- read.csv("data/ATH.csv")
SHOTLOC <- read.csv("data/SHOTLOC.csv")[-4]
POS <- read.csv("data/POS.csv")

ncaa <- ncaa[-c(36, 40, 42:43, 46:53)]
	ncaa <- merge(ncaa, SHOTLOC, by = c("Name", "Season", "Tm"), all.x =T)
	ncaa <- merge(ncaa, ATH, by = c("Name"), all.x =T)
	ncaa <- merge(ncaa, POS, by = "Name", all.x = T)
ncaa$OBS[ncaa$OBS < 0] <- 0
m1 <-     glm(OBS ~ 
                 I(predict(ac.lws, newdata= Age)) + I(MP/G) + SOS*MOV + EXP +
                 tmPTS + X2P + X3P + FT + X2PA*atRIM + X3PA + 
		 I((tmX2PA - X2PA)/((tmX3PA - X3PA) + (tmX2PA - X2PA))) +
                 AST*TOV + asd +
                 TRB + tmTRB + 
                 STL + BLK + I(tmSTL - STL) + I(tmBLK - BLK) +
                 tmPF + 
                 Height + NS_vert + Sprint,
             weights = MP, data = ncaa, family = quasipoisson)

	fit <- data.frame("EWP" = as.data.frame(predict(m1, newdata = ncaa, type = "response", se.fit = TRUE))$fit)
ncaa.ewp <- data.frame("Name" = ncaa$Name, "League" = "NCAA", "Team" = ncaa$Tm, "Season" = ncaa$Season, "MP" = ncaa$MP, "OBS" = ncaa$OBS, fit)
ncaa.ewp <- subset(ncaa.ewp, !is.na(EWP))
#	compz <- ncaa.ewp[order(ncaa.ewp$Season, decreasing = T), ]
#	compz <- subset(compz, !duplicated(Name))
#	for(i in 1:nrow(ncaa.ewp)){
#		compset <- c(ncaa.ewp$EWP[i], compz$EWP[compz$Name != ncaa.ewp$Name[i]])
#			obs <- na.omit(compz$OBS)
#		ncaa.ewp$adj[i] <- round(quantile(obs, (rank(compset, na.last = "keep")/max(rank(compset, na.last = "keep"), na.rm=T))[1]), 1)
#	}
#ncaa.ewp$EWP <- ncaa.ewp$adj
#ncaa.ewp <- ncaa.ewp[-ncol(ncaa.ewp)]

#
### EURO
	#prep
	obs.imp <- ncaa.ewp[order(ncaa.ewp$Season, decreasing = TRUE),]
	obs.imp <- subset(obs.imp, !duplicated(Name))[c(1,7)]
	euro$Name <- as.character(euro$Name)
	obs.imp$Name <- as.character(obs.imp$Name)
	euro <- merge(euro, obs.imp, by = "Name", all.x=T)
euro$OBS[is.na(euro$OBS)] <- euro$EWP[is.na(euro$OBS)]
euro <- euro[-ncol(euro)]

euro <- euro[-c(34, 36, 39:46)]
	euro <- merge(euro, subset(SHOTLOC, is.na(Tm)), by = c("Name", "Season"), all.x =T)
	euro <- merge(euro, ATH, by = c("Name"), all.x =T)
	euro <- merge(euro, POS, by = "Name", all.x = T)
	#run
euro$OBS[euro$OBS < 0] <- 0
for(i in 1:nrow(euro)){	
	euro$CBA[i] <- ifelse(eu.inf$League[eu.inf$Name == euro$Name[i] & eu.inf$Season == euro$Season[i]] == "CBA", 1, 0)
}
m2 <- glm(OBS ~ 
	 	 I(predict(ac.lws, newdata= Age)) +
                 PTS_tm + X2P + X3P + FT + X2PA*atRIM + X3PA + I((X2PA_tm - X2PA)/((X3PA_tm - X3PA) + (X2PA_tm - X2PA))) +
                 AST*TOV + asd*I(X2PA + X3PA) +
                 DRB + I((ORB_tm + DRB_tm) - (ORB + DRB)) +
                 STL + BLK + I(STL_tm - STL) +
                 PF + I(PF_tm - PF) + 
                 Height + NS_vert + CBA,
         weights = ifelse(Age <= 22, MP*5, MP), data = euro, family = quasipoisson)

	fit <- data.frame("EWP" = as.data.frame(predict(m2, newdata = euro, type = "response", se.fit = TRUE))$fit)
euro.ewp <- data.frame("Name" = euro$Name, "League" = NA, "Team" = NA, "Season" = euro$Season, "MP" = euro$MP, "OBS" = euro$OBS, fit)
euro.ewp <- subset(euro.ewp, !is.na(EWP))
	euro.ewp$Name <- as.character(euro.ewp$Name)
	eu.inf$Name <- as.character(eu.inf$Name)
	eu.inf$Team <- as.character(eu.inf$Team)
	for(i in 1:nrow(euro.ewp)){
		lgs <- unique(eu.inf$League[eu.inf$Name == euro.ewp$Name[i] & eu.inf$Season == euro.ewp$Season[i]])		
		tms <- unique(eu.inf$Team[eu.inf$Name == euro.ewp$Name[i] & eu.inf$Season == euro.ewp$Season[i]])
		#leagues
		if(length(lgs) == 3){
			euro.ewp$League[i] <- paste(lgs[1], lgs[2], lgs[3], sep = "/")
		}else if(length(lgs) == 2){
			euro.ewp$League[i] <- paste(lgs[1], lgs[2], sep = "/")
		}else{	
			euro.ewp$League[i] <- as.character(lgs[1])
		}
		#teams
		if(length(tms) == 3){
			euro.ewp$Team[i] <- paste(tms[1], tms[2], tms[3], sep = "/")
		}else if(length(tms) == 2){
			euro.ewp$Team[i] <- paste(tms[1], tms[2], sep = "/")
		}else{	
			euro.ewp$Team[i] <- as.character(tms[1])
		}
	}
			
### Combine and organize NCAA and Euro
ewp <- rbind(ncaa.ewp, euro.ewp)
ewp <- ewp[order(ewp$Season, decreasing = T), ]

###########
##############
##########

#
## Humble model
#

# Scale 
#draft order...
drft <- read.csv("data/Drafts.csv", strip.white=T)
	PICK <- merge(ewp, drft, by="Name", all.x=TRUE)
	PICK <- subset(PICK, !is.na(Pick))
	lws.pick <- loess(PICK$OBS ~ PICK$Pick, span=0.85)
	save(lws.pick, file = "lws.pick")

####	Prep random forest data
	hum.ncaa <- merge(ncaa.ewp, ncaa, by = c("Name", "Season", "MP", "OBS"), all.x = T)
		hum.ncaa <- merge(hum.ncaa, drft, by = "Name", all.x = T)
		hum.ncaa$Pick <- predict(lws.pick, newdata=hum.ncaa$Pick)
		hum.ncaa <- subset(hum.ncaa, DRFT >= 1990)
		hum.ncaa$Pick[is.na(hum.ncaa$Pick)] <- min(hum.ncaa$Pick, na.rm=T)		
	hum.euro <- merge(euro.ewp, euro, by = c("Name", "Season", "MP", "OBS"), all.x = T)
		hum.euro <- merge(hum.euro, drft, by = "Name", all.x = T)
		hum.euro$Pick <- predict(lws.pick, newdata=hum.euro$Pick)
		hum.euro <- subset(hum.euro, DRFT >= 1990)	
		hum.euro$Pick[is.na(hum.euro$Pick)] <- min(hum.euro$Pick, na.rm=T)		
		hum.euro$Tm <- hum.euro$Team

#####
library(randomForest)
case.ncaa <- data.frame("Name" = hum.ncaa$Name, "League" = "NCAA", "Tm" = hum.ncaa$Tm, "Season" = hum.ncaa$Season) 
case.euro <- data.frame("Name" = hum.euro$Name, "League" = hum.euro$League, "Tm" = hum.euro$Team, "Season" = hum.euro$Season) 
for(i in 1990:2015){
	m1 <- randomForest(OBS ~ 
                 Pick + Age + EXP + EWP + SOS + MOV +
		 X2P + X3P + FT + X2PA + X3PA + FTA + asd + atRIM +
		 AST + TOV + 
		 TRB +
		 STL + BLK + PF +
		 Height + NS_vert + Sprint,
			data = subset(hum.ncaa, Season != i), weights = MP, importance=TRUE, na.action=na.omit)

	case.ncaa$PRD[hum.ncaa$Season == i] <- predict(m1, subset(hum.ncaa, Season == i))
}
ncaa.hum <- data.frame("Name" = case.ncaa$Name, "League" = case.ncaa$League, "Team" = case.ncaa$Tm, "Season" = case.ncaa$Season, "HUM" = round(case.ncaa$PRD, 1))

ncaa.hum <- subset(ncaa.hum, !is.na(HUM))
#	for(i in 1:nrow(ncaa.hum)){
#		compset <- c(ncaa.hum$HUM[i], ncaa.hum$HUM[ncaa.hum$Name != ncaa.hum$Name[i]])
#			obs <- na.omit(ncaa.ewp$OBS)
#		ncaa.hum$adj[i] <- round(quantile(obs, (rank(compset, na.last = "keep")/max(rank(compset, na.last = "keep"), na.rm=T))[1]), 1)
#	}
#ncaa.hum$HUM <- ncaa.hum$adj
#ncaa.hum <- ncaa.hum[-ncol(ncaa.hum)]

#
for(i in 1990:2015){
	m1 <- randomForest(OBS ~ 
                 Pick + Age + EWP +
		 X2P + X3P + FT + X2PA + X3PA + FTA + asd + atRIM +
		 AST + TOV + 
		 DRB + ORB +
		 STL + BLK + PF +
		 Height + NS_vert + CBA,
			data = subset(hum.euro, Season != i), weights = ifelse(Age <= 22, MP*5, MP), importance=TRUE, na.action=na.omit)

	case.euro$PRD[hum.euro$Season == i] <- predict(m1, subset(hum.euro, Season == i))
}
euro.hum <- data.frame("Name" = case.euro$Name, "League" = case.euro$League, "Team" = case.euro$Tm, "Season" = case.euro$Season, "HUM" = round(case.euro$PRD, 1)) 

euro.hum <- subset(euro.hum, !is.na(HUM))
#	for(i in 1:nrow(euro.hum)){
#		compset <- c(euro.hum$HUM[i], euro.hum$HUM[euro.hum$Name != euro.hum$Name[i]])
#			obs <- na.omit(euro.ewp$OBS)
#		euro.hum$adj[i] <- round(quantile(obs, (rank(compset, na.last = "keep")/max(rank(compset, na.last = "keep"), na.rm=T))[1]), 1)
#	}
#euro.hum$HUM <- euro.hum$adj
#euro.hum <- euro.hum[-ncol(euro.hum)]

### Combine all finished sections
hum <- rbind(ncaa.hum, euro.hum)
data <- merge(ewp, hum, by = c("Name", "League", "Team", "Season"), all.x = T) 
data <- data[order(data$Season, decreasing = T), ]

#######
#########  STAR MOD!!!
######

star.ncaa <- ncaa
	colnames(star.ncaa)[4] <- "League"
	star.ncaa$PRB <- NA
	star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 2.5, 1, 0)
	star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 5, 2, star.ncaa$PRB)
	star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 7.5, 3, star.ncaa$PRB)
	star.ncaa$PRB <- ifelse(!is.na(star.ncaa$OBS) & star.ncaa$OBS >= 10, 4, star.ncaa$PRB)
	star.ncaa <- merge(star.ncaa, data[c(1,4,7,8)], by = c("Name", "Season"), all.x = T)

star.euro <- merge(data, euro.hum, by = c("Name", "Season", "League", "Team", "HUM"), all.x = T)
	star.euro <- subset(star.euro, League != "NCAA")
	star.euro$PRB <- NA
	star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 2.5, 1, 0)
	star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 5, 2, star.euro$PRB)
	star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 7.5, 3, star.euro$PRB)
	star.euro$PRB <- ifelse(!is.na(star.euro$OBS) & star.euro$OBS >= 10, 4, star.euro$PRB)

	library(nnet)

	prb.ncaa <- multinom(PRB ~ 
                 I(ifelse(is.na(HUM), EWP, (EWP + HUM)/2)) + 
		 I(predict(ac.lws, newdata= Age)) + SOS + 
                 PTS + I((X2P + X3P*1.5)/(X2PA + X3PA)) + I(X3PA/(X2PA+X3PA)) +
                 AST + TOV + asd*I(X2PA + X3PA) +
                 TRB + STL + BLK + PF +
                 Height + NS_vert, 
		 data=star.ncaa, weights = MP)
	prb.euro <- multinom(PRB ~
 		 I(ifelse(is.na(HUM), EWP, (EWP + HUM)/2)), 
		 data=star.euro, weights =  MP)

	PRB.ncaa <- data.frame("PRB" = round(predict(prb.ncaa, newdata=star.ncaa, "probs"), digits=3))
		colnames(PRB.ncaa) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
		star.ncaa <- cbind(star.ncaa, PRB.ncaa)
			star.ncaa <- star.ncaa[c(1:2, 4, 3, 6, 39, 53:59)]
			colnames(star.ncaa)[4] <- "Team"
	PRB.euro <- data.frame("PRB" = round(predict(prb.euro, newdata=star.euro, "probs"), digits=3))
		colnames(PRB.euro) <- c("BUST", "BNCH", "STRT", "STUD", "STAR")
		star.euro <- cbind(star.euro, PRB.euro)	
			star.euro <- star.euro[c(1:4, 6:8, 5, 10:14)]
			star.euro$MP <- round(star.euro$MP, 0)
	data <- rbind(star.ncaa, star.euro)
#	data <- rbind(star.ncaa[c(1:8, (ncol(star.ncaa)-4):ncol(star.ncaa))], star.euro[c(1:8, (ncol(star.euro)-4):ncol(star.euro))])
#	data <- merge(data, star[c(1:8, 38:42)], by = c("Name", "Season", "League", "Team", "MP", "OBS", "EWP", "HUM"), all.x = T)


##########
##	Plug into draft history
#######

### plug retrodictions into drafted list
draft <- read.csv("data/Drafts.csv")
draft <- subset(draft, DRFT >= 1990)
draft$Name <- as.character(draft$Name)
#	percent <- function(x, digits = 0, format = "f", ...) {
 #		 paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
#	}

for(i in 1:nrow(draft)){
	ego <- subset(data, Name == draft$Name[i] & Season <= draft$DRFT[i])
	draft$League[i] <- as.character(ego$League[1])		
	draft$Team[i] <- as.character(ego$Team[1])	
	draft$MP[i] <- round(sum(ego$MP, na.rm = T), 0)
	draft$EWP[i] <- round(weighted.mean(ego$EWP, ego$MP, na.rm = T), 1)
	draft$HUM[i] <- round(weighted.mean(ego$HUM, ego$MP, na.rm = T), 1)
	draft$BUST[i] <- round(weighted.mean(ego$BUST, ego$MP, na.rm = T), 2)
	draft$BNCH[i] <- round(weighted.mean(ego$BNCH, ego$MP, na.rm = T), 2)
	draft$STRT[i] <- round(weighted.mean(ego$STRT, ego$MP, na.rm = T), 2)
	draft$STUD[i] <- round(weighted.mean(ego$STUD, ego$MP, na.rm = T), 2)
	draft$STAR[i] <- round(weighted.mean(ego$STAR, ego$MP, na.rm = T), 2)
}
colnames(draft)[3] <- "Season"


draft <- subset(draft, !duplicated(Name))

	draft[draft == "NaN"] <- NA	
#		draft$BUST[!is.na(draft$BUST)] <- percent(draft$BUST[!is.na(draft$BUST)])
#		draft$BNCH[!is.na(draft$BNCH)] <- percent(draft$BNCH[!is.na(draft$BNCH)])
#		draft$STRT[!is.na(draft$STRT)] <- percent(draft$STRT[!is.na(draft$STRT)])
#		draft$STUD[!is.na(draft$STUD)] <- percent(draft$STUD[!is.na(draft$STUD)])	
#		draft$STAR[!is.na(draft$STAR)] <- percent(draft$STAR[!is.na(draft$STAR)])


draft <- data.frame(draft[1:8], "AVG" = round(ifelse(!is.na(draft$HUM), (draft$HUM + draft$EWP)/2, draft$EWP), 1), draft[9:13])
	draft <- merge(draft, POS, by = "Name", all.x = T)	
	draft <- draft[order(draft$AVG, decreasing = T),]
	draft <- draft[order(draft$Season, decreasing = T),]
	draft$Pos <- round(draft$Pos, 1)

  #########
### OUTPUT ####
  #########
	data$MP <- round(data$MP, 0)	
	data$OBS <- round(data$OBS, 1)	
#	data$BUST[!is.na(data$BUST)] <- percent(round(as.numeric(data$BUST[!is.na(data$BUST)]), 2))
#	data$BNCH[!is.na(data$BNCH)] <- percent(round(as.numeric(data$BNCH[!is.na(data$BNCH)]), 2))
#	data$STRT[!is.na(data$STRT)] <- percent(round(as.numeric(data$STRT[!is.na(data$STRT)]), 2))
#	data$STUD[!is.na(data$STUD)] <- percent(round(as.numeric(data$STUD[!is.na(data$STUD)]), 2))
#	data$STAR[!is.na(data$STAR)] <- percent(round(as.numeric(data$STAR[!is.na(data$STAR)]), 2))

	#data <- merge(data, POS, by = "Name", all.x = T)	


write.csv(data, "~/GitHub/bball/shiny/preds/data/OUTPUT.FULL.csv", row.names = FALSE)
write.csv(draft, "~/GitHub/bball/shiny/preds/data/OUTPUT.DRAFT.csv", row.names = FALSE)




